#!/bin/bash

source /etc/mother-versions

export DEBIAN_FRONTEND=noninteractive

bl "installing Puppetmaster"
apt-get -qqy install \
  puppetmaster=${PUPPET_VERSION}* \
  puppetdb-terminus \
  hiera \
  libssl-dev \
  libcurl4-openssl-dev \
  zlib1g-dev \
  ruby-dev \
  build-essential
bl "Puppetmaster installed"

bl "installing Passenger"
gem install passenger --no-rdoc --no-ri
bl "Passenger installed"

bl "installing Puppet Librarian"
gem install librarian-puppet --no-rdoc --no-ri
bl "Librarian installed"

bl "installing NGINX (compiling, this may take a while...)"
passenger-install-nginx-module --auto --auto-download > /tmp/nginx_install_log.txt 2>/dev/null
bl "NGINX installed"

bl "configuring NGINX for passenger"
PASSENGER_ROOT=`egrep 'passenger_root\ \/' /tmp/nginx_install_log.txt | awk '{ print $2 }' | sed s/\;//`
PASSENGER_RUBY=`egrep 'passenger_ruby\ \/' /tmp/nginx_install_log.txt | awk '{ print $2 }' | sed s/\;//`
echo "# this config is autogenerated by docker build
user puppet;
worker_processes 10;
daemon off;
events {
  worker_connections 1024;
}
http {
  passenger_root ${PASSENGER_ROOT};
  passenger_ruby ${PASSENGER_RUBY};
  passenger_max_pool_size 15;
  passenger_min_instances 2;
  passenger_pool_idle_time 15;
  passenger_user_switching on;
  include mime.types;
  default_type application/octet-stream;
  sendfile on;
  keepalive_timeout 120;
  client_body_buffer_size 100m;
  gzip on;
  include /opt/nginx/conf/puppetmaster.conf;
}
" > /opt/nginx/conf/nginx.conf
touch /opt/nginx/conf/puppetmaster.conf
bl "NGINX configured"
